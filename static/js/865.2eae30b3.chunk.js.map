{"version":3,"file":"static/js/865.2eae30b3.chunk.js","mappings":"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","sources":["components/ProductDetailsCard/SizeOption/SizeOption.jsx","components/ProductDetailsCard/DeliveryInfo/DeliveryInfo.jsx","components/ProductDetailsCard/AdditionalInfo/AdditionalInfo.jsx","components/ProductDetailsCard/ProductInfo/ProductInfo.jsx","components/ProductDetailsCard/ProductDetailsCard.jsx","pages/ProductDetailsPage/ProductDetailsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport './SizeOption.scss';\n\nconst SizeOption = ({ product, currentSize, onUpdateSize }) => {\n  return (\n    <>\n      <p className=\"choosen-size\">Розмір: {currentSize} см</p>\n      <ul className=\"sizes-list\">\n        {product.sizes.map((size, idx) => (\n          <li key={idx} className=\"item\">\n            <button\n              type=\"button\"\n              className={currentSize === size ? 'size-btn active' : 'size-btn'}\n              onClick={() => onUpdateSize(size)}\n            >\n              {size} см\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nSizeOption.propTypes = {\n  product: PropTypes.shape({\n    sizes: PropTypes.arrayOf(PropTypes.string),\n  }),\n  currentSize: PropTypes.string.isRequired,\n  onUpdateSize: PropTypes.func.isRequired,\n};\n\nexport default SizeOption;\n","import { GiPostOffice } from 'react-icons/gi';\nimport { BsBoxSeam } from 'react-icons/bs';\nimport './DeliveryInfo.scss';\n\nconst DeliveryInfo = () => {\n  return (\n    <div className=\"delivery-info\">\n      <p className=\"subhead\">Доставка по Україні - Нова Пошта</p>\n      <ul className=\"list-info\">\n        <li className=\"item\">\n          <GiPostOffice className=\"icon\" />\n          <span>Самовивіз з віділення Нової Пошти. Самовивіз зі складу.</span>\n        </li>\n        <li className=\"item\">\n          <BsBoxSeam className=\"icon\" />\n          <span>Доставка кур'єром.</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default DeliveryInfo;\n","import { BsWallet2 } from 'react-icons/bs';\nimport { CgFileDocument } from 'react-icons/cg';\nimport './AdditionalInfo.scss';\n\nconst AdditionalInfo = () => {\n  return (\n    <div className=\"additional-info\">\n      <ul className=\"additional-list\">\n        <li className=\"item\">\n          <BsWallet2 className=\"icon\" />\n          <p className=\"payment-text\">\n            <span className=\"subhead\">Оплата.</span> Оплата під час отримання\n            товару. Повна оплата на карту. Передплата на карту продавця.\n          </p>\n        </li>\n        <li className=\"item\">\n          <CgFileDocument className=\"icon\" />\n          <p className=\"guarantee-text\">\n            <span className=\"subhead\">Гарантія.</span>\n            18 місяців офіційної гарантії від виробника.\n          </p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ProductInfo.scss\";\n\nconst options = [\"Опис\", \"Характеристики\"];\n\nconst ProductInfo = ({ product }) => {\n  const [productInfo, setProductInfo] = useState(options[0]);\n  const {\n    desc1,\n    desc2,\n    desc3,\n    desc4,\n    guarantee,\n    stiffnessSides,\n    stiffness,\n    load,\n    type,\n    typeSpring,\n    option,\n    cover,\n    height,\n    coconut,\n    latex,\n    materialCover,\n    layer1,\n    layer2,\n    layer3,\n  } = product;\n\n  const helperYesOrNot = (item) => (item ? \"Так\" : \"Ні\");\n\n  return (\n    <div className=\"product-info\">\n      <div className=\"options-box\">\n        {options.map((option, idx) => (\n          <button\n            key={idx}\n            type=\"button\"\n            className={\n              productInfo === option ? \"option-btn active\" : \"option-btn\"\n            }\n            onClick={() => setProductInfo(option)}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n      {productInfo === options[0] && (\n        <div className=\"prodcut-about\">\n          <p className=\"text\">{desc1}</p>\n          <p className=\"text\">{desc2}</p>\n          <p className=\"text\">{desc3}</p>\n          <p className=\"text\">{desc4}</p>\n        </div>\n      )}\n      {productInfo === options[1] && (\n        <div className=\"product-characteristics\">\n          <ul className=\"list-characteristics\">\n            <li className=\"item\">\n              <p className=\"heading\">Гарантія на виріб</p>\n              <span className=\"design-line\"></span>\n              <p>{guarantee} місяців</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Жорсткість сторін матраца</p>\n              <span className=\"design-line\"></span>\n              <p>{stiffnessSides}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Жорсткість</p>\n              <span className=\"design-line\"></span>\n              <p>{stiffness}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Навантаження на спальне місце</p>\n              <span className=\"design-line\"></span>\n              <p>{load}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Тип матраца</p>\n              <span className=\"design-line\"></span>\n              <p>{type}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Тип пружинного блоку</p>\n              <span className=\"design-line\"></span>\n              <p>{typeSpring}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Опція зима/літо</p>\n              <span className=\"design-line\"></span>\n              <p>{helperYesOrNot(option)}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Чохол на блискавці</p>\n              <span className=\"design-line\"></span>\n              <p>{helperYesOrNot(cover)}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Висота моделі матраца</p>\n              <span className=\"design-line\"></span>\n              <p>{height}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Кокос</p>\n              <span className=\"design-line\"></span>\n              <p>{helperYesOrNot(coconut)}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Латекс</p>\n              <span className=\"design-line\"></span>\n              <p>{helperYesOrNot(latex)}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Матеріал чохла</p>\n              <span className=\"design-line\"></span>\n              <p>{materialCover}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Шар 1</p>\n              <span className=\"design-line\"></span>\n              <p>{layer1}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Шар 2</p>\n              <span className=\"design-line\"></span>\n              <p>{helperYesOrNot(layer2)}</p>\n            </li>\n            <li className=\"item\">\n              <p className=\"heading\">Шар 3</p>\n              <span className=\"design-line\"></span>\n              <p>{helperYesOrNot(layer3)}</p>\n            </li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nProductInfo.propTypes = {\n  product: PropTypes.shape({\n    desc1: PropTypes.string.isRequired,\n    desc2: PropTypes.string.isRequired,\n    desc3: PropTypes.string.isRequired,\n    desc4: PropTypes.string.isRequired,\n    guarantee: PropTypes.number.isRequired,\n    stiffnessSides: PropTypes.string.isRequired,\n    stiffness: PropTypes.string.isRequired,\n    load: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    typeSpring: PropTypes.string.isRequired,\n    option: PropTypes.bool.isRequired,\n    cover: PropTypes.bool.isRequired,\n    height: PropTypes.string.isRequired,\n    coconut: PropTypes.bool.isRequired,\n    latex: PropTypes.bool.isRequired,\n    materialCover: PropTypes.string.isRequired,\n    layer1: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n    layer2: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n    layer3: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  }),\n};\n\nexport default ProductInfo;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectProductInCart } from 'redux/cart/selectors';\nimport { addProductToCart } from 'redux/cart/slice';\nimport SizeOption from './SizeOption/SizeOption';\nimport DeliveryInfo from './DeliveryInfo/DeliveryInfo';\nimport AdditionalInfo from './AdditionalInfo/AdditionalInfo';\nimport ProductInfo from './ProductInfo/ProductInfo';\nimport { BsFillCartCheckFill } from 'react-icons/bs';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport './ProductDetailsCard.scss';\n\nconst ProductDetailsCard = ({ product }) => {\n  const dispatch = useDispatch();\n  const productsCart = useSelector(selectProductInCart);\n  const [size, setSize] = useState(product.sizes[0]);\n  const chekProductInCart = productsCart.some(\n    productCart =>\n      productCart.size === size && productCart.name === product.name\n  );\n\n  const onUpdateSize = newSize => {\n    setSize(newSize);\n  };\n\n  const addToCart = () => {\n    const productToCart = {\n      ...product,\n      id: nanoid(),\n      size,\n    };\n    dispatch(addProductToCart(productToCart));\n  };\n\n  return (\n    <div className=\"product-details\">\n      <h2 className=\"section-title details-title\">Матрац {product.name}</h2>\n      <div className=\"box-img\">\n        <img\n          srcSet={`${product.img1x} 1x, ${product.img2x} 2x`}\n          src={product.img1x}\n          alt={`Матрац ${product.name}`}\n        />\n      </div>\n\n      <SizeOption\n        product={product}\n        currentSize={size}\n        onUpdateSize={onUpdateSize}\n      />\n\n      <span className=\"new-price\">{product.newPrice} грн.</span>\n      <span className=\"old-price\">{product.oldPrice} грн.</span>\n      <button\n        type=\"button\"\n        className=\"btn-add-cart\"\n        onClick={() => addToCart(product.id)}\n        disabled={chekProductInCart}\n      >\n        {chekProductInCart ? (\n          <>\n            <BsFillCartCheckFill className=\"icon\" />\n            Товар у кошику\n          </>\n        ) : (\n          <>\n            <FaShoppingCart className=\"icon\" />\n            Додати у кошик\n          </>\n        )}\n      </button>\n\n      <DeliveryInfo />\n      <AdditionalInfo />\n      <ProductInfo product={product} />\n    </div>\n  );\n};\n\nProductDetailsCard.propTypes = {\n  product: PropTypes.shape({\n    sizes: PropTypes.arrayOf(PropTypes.string),\n    name: PropTypes.string,\n    img1x: PropTypes.string,\n    img2x: PropTypes.string,\n    newPrice: PropTypes.number,\n    oldPrice: PropTypes.number,\n    id: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ProductDetailsCard;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Section from 'components/common/Section/Section';\nimport Container from 'components/common/Container/Container';\nimport BtnLink from 'components/common/BtnLink/BtnLink';\nimport ProductDetailsCard from 'components/ProductDetailsCard/ProductDetailsCard';\nimport ScrollToTop from 'components/common/ScrollToTop/ScrollToTop';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport './ProductDetailsPage.scss';\n\nconst ProductDetailsPage = ({ products }) => {\n  const { productName } = useParams();\n  const product = products.find(({ name }) => name === productName);\n\n  return (\n    <main>\n      <ScrollToTop />\n      <Section>\n        <Container>\n          <div className=\"product-details\">\n            <BtnLink\n              to=\"/products\"\n              text=\"назад до товарів\"\n              type=\"btn-back\"\n              icon={<HiArrowNarrowLeft className=\"icon\" />}\n            />\n            <ProductDetailsCard product={product} />\n          </div>\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nProductDetailsPage.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ProductDetailsPage;\n"],"names":["product","currentSize","onUpdateSize","className","sizes","map","size","idx","type","onClick","options","useState","productInfo","setProductInfo","desc1","desc2","desc3","desc4","guarantee","stiffnessSides","stiffness","load","typeSpring","option","cover","height","coconut","latex","materialCover","layer1","layer2","layer3","helperYesOrNot","item","dispatch","useDispatch","productsCart","useSelector","selectProductInCart","setSize","chekProductInCart","some","productCart","name","srcSet","img1x","img2x","src","alt","newSize","newPrice","oldPrice","productToCart","id","nanoid","addProductToCart","addToCart","disabled","products","productName","useParams","find","ScrollToTop","Section","Container","BtnLink","to","text","icon"],"sourceRoot":""}